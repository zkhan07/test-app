{"version":3,"sources":["Utils/Error.js","Components/LoginPage/LoginPage.js"],"names":["MyErrorModal","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","closeModal","console","log","redirect","react_default","a","createElement","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","className","content","DialogActions","cancelActionText","Button","onClick","cancelRedirectNew","color","positiveActionText","LoginPage","_useState","_useState2","error","setError","_useForm","useForm","register","handleSubmit","errors","_useState3","_useState4","status","_useState5","sessionStorage","getItem","_useState6","password","_useState7","_useState8","redirectToLogin","setRedirectToLogin","_useState9","_useState10","userName","setUserName","useEffect","react_router","to","Fragment","Error_MyErrorModal","onSubmit","data","e","preventDefault","setItem","type","name","placeholder","ref","required","variant","fluid"],"mappings":"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","file":"static/js/6.2ef06d48.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const MyErrorModal= (props) => {\r\n  const [open,setOpen]=React.useState(true);\r\n  \r\n  const closeModal = function closeModal(){\r\n    console.log(\"close modal\");\r\n    props.redirect && props.redirect();\r\n    \r\n    setOpen(false);\r\n  }\r\n\r\n  const cancelModal = function cancelModal(){\r\n    props.cancelRedirectNew && props.cancelRedirectNew();\r\n    setOpen(false);\r\n      \r\n  }\r\n\r\n  \r\n\r\n\r\n  \r\n  return(\r\n    <Dialog\r\n    open={open}\r\n    onClose={closeModal}\r\n    aria-labelledby=\"alert-dialog-title\"\r\n    aria-describedby=\"alert-dialog-description\"\r\n  >\r\n   <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>   \r\n  \r\n<DialogContent>\r\n    <DialogContentText id=\"alert-dialog-description\">\r\n        <div className=\"ui sub header container centered\"> {props.content}</div> \r\n    </DialogContentText>\r\n</DialogContent>\r\n   \r\n   <DialogActions>\r\n  {props.cancelActionText && \r\n  <Button onClick={cancelModal}\r\n             color=\"primary\"\r\n            //   content={props.cancelActionText}\r\n            >\r\n            {props.cancelActionText}\r\n            </Button>\r\n            }\r\n           {props.positiveActionText && \r\n           <Button onClick={closeModal}\r\n              color=\"secondary\"\r\n            //   content={props.positiveActionText}\r\n            >\r\n                {props.positiveActionText}\r\n                </Button>\r\n            }\r\n    </DialogActions>\r\n    </Dialog>  \r\n  );\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container,Grid } from '@material-ui/core';\r\nimport _ from 'lodash'\r\nimport { useForm } from 'react-hook-form'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n} from 'react-router-dom'\r\nimport { MyErrorModal } from '../../Utils/Error';\r\nimport './UI.css';\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [error, setError] = useState(false);\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [status, setStatus] = useState(null)\r\n    \r\n    const [password,setPassword]=useState(sessionStorage.getItem(\"password\"))\r\n    const [redirectToLogin,setRedirectToLogin] = useState(false);\r\n    const [userName,setUserName]=useState(sessionStorage.getItem(\"userName\"));\r\n\r\n    useEffect(() => {\r\n        if(userName!=='Shubham' && password!==\"123\"){\r\n            setRedirectToLogin(false);\r\n       }    \r\n    }, [])\r\n\r\n    const onSubmit = function onSubmit(data, e) {\r\n        e.preventDefault();\r\n        if(data){\r\n            setUserName(sessionStorage.setItem(\"userName\",data.userName))\r\n            setUserName(sessionStorage.setItem(\"password\",data.password))\r\n            \r\n                if(data.userName=='Shubham' && data.password=='123' ){\r\n                setRedirectToLogin(true);\r\n                }\r\n                else{\r\n                    setError(true);\r\n                }\r\n    }\r\n\r\n    }\r\n\r\n    \r\n    // if(userName && password ){\r\n    //             setRedirectToLogin(true);\r\n    //     }   \r\n \r\n    // console.log(userName)\r\n       if(redirectToLogin){\r\n        return(<Redirect to={`/dashboard`}/>)\r\n    }\r\n    \r\n\r\n    const cancelServerErrorModal = function cancelServerErrorModal() {\r\n        setError(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (        \r\n            <>\r\n            {error &&\r\n                <MyErrorModal title={status} positiveActionText={\"close\"} content={\"Incorrect userName or Password\"} redirect={cancelServerErrorModal} />\r\n            }\r\n            <div className=\"middleCenterClass\">\r\n                <div className=\"segment\">\r\n                    <div className=\"formContent\">\r\n                        <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                            <div className=\"field\">\r\n                                <label>First Name</label>\r\n                                <input type=\"text\" name=\"userName\" placeholder=\"Username\" ref={register({ required: true })} />\r\n                            </div>\r\n                            {\r\n                                errors && errors.userName ? \r\n                                <div className=\"errorDiv errorTxt \">User Name is Required</div>\r\n                                    : null}\r\n                            <div className=\"field\">\r\n                                <label>Password</label>\r\n                                <input type=\"password\" name=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\r\n                            </div>\r\n                            {\r\n                                errors && errors.password ? <> \r\n                                <div className=\"errorDiv errorTxt \">Password is Required</div>\r\n                                </>\r\n                                    : null}\r\n                            <button className=\" button\" variant=\"contained\" color=\"primary\" fluid>\r\n                                Login\r\n                            </button>\r\n                            {/* <button disabled className=\"ui button\" >\r\n                                Forgot Password ?\r\n                            </button> */}\r\n                        </form>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n       \r\n    )\r\n}\r\nexport default LoginPage;\r\n"],"sourceRoot":""}